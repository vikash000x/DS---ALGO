Example 1:

Input: nums = [1,2,3], target = 4
Output: 7
Explanation:
The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)
Note that different sequences are counted as different combinations.
Example 2:

Input: nums = [9], target = 3
Output: 0

class Solution {
public:
int n;
int arr[1001][1001];
int solve(vector<int> &nums, int target, int idx){
  if(target==0) return 1;
  if(idx>=n || target<0) return 0;

  if(arr[target][idx] != -1) return arr[target][idx];

  int take = solve(nums, target-nums[idx], 0);
  int not_take = solve(nums, target, idx+1);
  return arr[target][idx] = take + not_take;
}
    int combinationSum4(vector<int>& nums, int target) {
        n = nums.size();
        memset(arr, -1, sizeof(arr));
        return solve(nums, target, 0);
    }
};


