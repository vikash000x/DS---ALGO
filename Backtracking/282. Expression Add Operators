Example 1:

Input: num = "123", target = 6
Output: ["1*2*3","1+2+3"]
Explanation: Both "1*2*3" and "1+2+3" evaluate to 6.
Example 2:

Input: num = "232", target = 8
Output: ["2*3+2","2+3*2"]
Explanation: Both "2*3+2" and "2+3*2" evaluate to 8.
Example 3:

Input: num = "3456237490", target = 9191
Output: []
Explanation: There are no expressions that can be created from "3456237490" to evaluate to 9191.


class Solution {
public:
vector<string>result;
int target;
string s;

   void solve(int i, const string& path, long prev, long prevnum){
    if(i==s.length()) {
        if(prev==target){
            result.push_back(path);
        }
        return;
    }
    string numstr;
    long num =0;
    for(int j = i; j<s.length(); j++){
        if(j>i && s[i]=='0') break;
        numstr += s[j];
        num = num*10 + s[j]-'0';
        if(i==0){
            solve(j+1, path+numstr, num, num);
        } else {
            solve(j+1, path+ "+" +numstr, prev+num , num);
            solve(j+1, path+ "-" +numstr, prev-num, -num);
            solve(j+1, path+ "*" +numstr, prev-prevnum+prevnum*num, prevnum*num);
        }
    }
   }

    vector<string> addOperators(string s, int target) {
        result = {};
        this->target = target;
        this->s = s;
        solve(0, "", 0, 0);
        return result;
    }
};
